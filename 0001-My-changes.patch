From 233ac924567c6a20ec88ecc249269afe82c3f726 Mon Sep 17 00:00:00 2001
From: BeimnetTsegaye <tsbeimn@gmail.com>
Date: Thu, 10 Jul 2025 16:45:12 +0300
Subject: [PATCH] My changes

---
 0001-My-changes.patch                         | 513 ------------------
 .../pages/program_detail_page.dart            |  22 +-
 .../presentation/widgets/director_card.dart   |   6 +-
 .../widgets/program_detail_card.dart          |  70 ++-
 .../widgets/program_detail_overlay.dart       |   1 -
 .../presentation/widgets/req_card.dart        |   1 +
 6 files changed, 57 insertions(+), 556 deletions(-)
 delete mode 100644 0001-My-changes.patch

diff --git a/0001-My-changes.patch b/0001-My-changes.patch
deleted file mode 100644
index e2073b7..0000000
--- a/0001-My-changes.patch
+++ /dev/null
@@ -1,513 +0,0 @@
-From e1ba5f1d399624d59d8b1c20a0e356e850473199 Mon Sep 17 00:00:00 2001
-From: BeimnetTsegaye <tsbeimn@gmail.com>
-Date: Wed, 9 Jul 2025 12:30:49 +0300
-Subject: [PATCH] My changes
-
----
- create_patch.sh                               |  16 +
- .../presentation/pages/feedback_page.dart     | 423 ++++++++++++++----
- 2 files changed, 346 insertions(+), 93 deletions(-)
- create mode 100644 create_patch.sh
-
-diff --git a/create_patch.sh b/create_patch.sh
-new file mode 100644
-index 0000000..3f7d6d3
---- /dev/null
-+++ b/create_patch.sh
-@@ -0,0 +1,16 @@
-+#!/bin/bash
-+echo "ðŸ“¦ Creating patch from your changes..."
-+
-+if [ ! -d ".git" ]; then
-+  git init
-+  git add .
-+  git commit -m "Base snapshot"
-+fi
-+
-+git add .
-+git commit -m "My changes"
-+
-+git format-patch -1 HEAD
-+
-+echo "âœ… Patch file created: $(ls 0001-*.patch)"
-+echo "ðŸ“§ Send this patch file back to the original author."
-diff --git a/lib/features/home/presentation/pages/feedback_page.dart b/lib/features/home/presentation/pages/feedback_page.dart
-index f19081b..3fecaea 100644
---- a/lib/features/home/presentation/pages/feedback_page.dart
-+++ b/lib/features/home/presentation/pages/feedback_page.dart
-@@ -6,6 +6,7 @@ import 'package:esl/features/home/domain/entities/feedback.dart';
- import 'package:esl/features/home/presentation/blocs/feedback/feedback_bloc.dart';
- import 'package:flutter/material.dart' hide Feedback;
- import 'package:flutter_bloc/flutter_bloc.dart';
-+import 'package:intl/intl.dart';
- 
- class FeedbackPage extends StatefulWidget {
-   const FeedbackPage({super.key});
-@@ -16,9 +17,30 @@ class FeedbackPage extends StatefulWidget {
- 
- class _FeedbackPageState extends State<FeedbackPage> {
-   int selectedRating = 0;
--  FeedbackGroup? selectedGroup;
-+  bool _isExpanded1 = false;
-+  bool _isExpanded2 = false;
-   final TextEditingController _commentController = TextEditingController();
- 
-+  // Sample feedback data - in a real app, this would come from your backend
-+  final List<Map<String, dynamic>> _sampleFeedback = [
-+    {
-+      'name': 'Sara Abreham',
-+      'date': 'July 2, 2025',
-+      'comment':
-+          'Loved the tour! Lake Babogaya is stunning, and the facilities look modern. Great job!',
-+      'rating': 5,
-+      'avatar': 'ðŸ‘©',
-+    },
-+    {
-+      'name': 'John Doe',
-+      'date': 'July 1, 2025',
-+      'comment':
-+          'The campus is beautiful and well-maintained. The tour guide was very knowledgeable.',
-+      'rating': 4,
-+      'avatar': 'ðŸ‘¨',
-+    },
-+  ];
-+
-   @override
-   void dispose() {
-     _commentController.dispose();
-@@ -27,6 +49,9 @@ class _FeedbackPageState extends State<FeedbackPage> {
- 
-   @override
-   Widget build(BuildContext context) {
-+    final now = DateTime.now();
-+    final formattedDate = DateFormat('h:mm a, MMM d').format(now);
-+
-     return Scaffold(
-       body: BlocConsumer<FeedbackBloc, FeedbackState>(
-         listener: (context, state) {
-@@ -34,7 +59,17 @@ class _FeedbackPageState extends State<FeedbackPage> {
-             ScaffoldMessenger.of(context).showSnackBar(
-               const SnackBar(content: Text('Feedback submitted successfully')),
-             );
--            Navigator.pop(context);
-+            setState(() {
-+              _sampleFeedback.insert(0, {
-+                'name': 'You',
-+                'date': DateFormat('MMMM d, y').format(DateTime.now()),
-+                'comment': _commentController.text,
-+                'rating': selectedRating,
-+                'avatar': 'ðŸ˜Š',
-+              });
-+              _commentController.clear();
-+              selectedRating = 0;
-+            });
-           } else if (state is ErrorFeedbackState) {
-             ScaffoldMessenger.of(
-               context,
-@@ -45,110 +80,312 @@ class _FeedbackPageState extends State<FeedbackPage> {
-           if (state is LoadingFeedbackState) {
-             return const Center(child: LoadingWidget());
-           }
--          return ListView(
--            padding: const EdgeInsets.all(16),
--            children: [
--              const Text('We value your Feedback', style: boldTextStyle),
--              const SizedBox(height: 16),
--              const Text(
--                '''At ESL, your voice matters. Whether you're a student navigating your academic journey, a staff member contributing to our mission, or a guest exploring our services, we welcome your feedback. Your insights help us enhance our programs, services, and community.''',
--              ),
--              const SizedBox(height: 16),
--              const Text('Please select the group that best describes you:'),
--              const SizedBox(height: 16),
--              DropdownButtonFormField<FeedbackGroup>(
--                value: selectedGroup,
--                items: FeedbackGroup.values.map((group) {
--                  return DropdownMenuItem(
--                    value: group,
--                    child: Text(group.name.toUpperCase()),
--                  );
--                }).toList(),
--                onChanged: (FeedbackGroup? value) {
--                  setState(() {
--                    selectedGroup = value;
--                  });
--                },
--                decoration: const InputDecoration(
--                  border: OutlineInputBorder(),
--                  labelText: 'Select One',
--                ),
--              ),
--              const SizedBox(height: 16),
--              const Text('Rate your overall experience with us'),
--              const SizedBox(height: 16),
--              Row(
--                mainAxisSize: MainAxisSize.min,
--                children: List.generate(5, (index) {
--                  return IconButton(
--                    padding: EdgeInsets.zero,
--                    icon: Icon(
--                      index < selectedRating ? Icons.star : Icons.star_border,
--                      color: Colors.amber,
-+
-+          return SingleChildScrollView(
-+            child: Padding(
-+              padding: const EdgeInsets.all(16.0),
-+              child: Column(
-+                crossAxisAlignment: CrossAxisAlignment.start,
-+                children: [
-+                  // Header with time and notification
-+                  Row(
-+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
-+                    children: [
-+                      Text(formattedDate, style: const TextStyle(fontSize: 16)),
-+                      const Icon(Icons.notifications_none, size: 28),
-+                    ],
-+                  ),
-+
-+                  const SizedBox(height: 20),
-+
-+                  // Greeting
-+                  const Text(
-+                    'Hello, User!',
-+                    style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
-+                  ),
-+
-+                  const SizedBox(height: 30),
-+
-+                  // Title
-+                  const Text(
-+                    'Share Your Thoughts on the Campus Tour!',
-+                    style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
-+                  ),
-+
-+                  const SizedBox(height: 10),
-+
-+                  const Text(
-+                    'We\'d love to hear about your experience touring the Babogaya Maritime and Logistics Academy. Your feedback helps us improve!',
-+                    style: TextStyle(fontSize: 16, color: Colors.grey),
-+                  ),
-+
-+                  const SizedBox(height: 30),
-+
-+                  // Existing feedback section
-+                  if (_sampleFeedback.isNotEmpty) ...[
-+                    const Text(
-+                      'What others are saying:',
-+                      style: TextStyle(
-+                        fontSize: 18,
-+                        fontWeight: FontWeight.bold,
-+                      ),
-+                    ),
-+                    const SizedBox(height: 15),
-+                    ..._sampleFeedback
-+                        .map((feedback) => _buildFeedbackCard(feedback))
-+                        .toList(),
-+                    const SizedBox(height: 30),
-+                  ],
-+
-+                  // Feedback form
-+                  const Text(
-+                    'Share your experience',
-+                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
-+                  ),
-+
-+                  const SizedBox(height: 15),
-+
-+                  // Star rating
-+                  Row(
-+                    mainAxisAlignment: MainAxisAlignment.center,
-+                    children: List.generate(5, (index) {
-+                      return IconButton(
-+                        padding: const EdgeInsets.symmetric(horizontal: 4),
-+                        icon: Icon(
-+                          index < selectedRating
-+                              ? Icons.star
-+                              : Icons.star_border,
-+                          color: Colors.amber,
-+                          size: 36,
-+                        ),
-+                        onPressed: () {
-+                          setState(() {
-+                            selectedRating = index + 1;
-+                          });
-+                        },
-+                      );
-+                    }),
-+                  ),
-+
-+                  const SizedBox(height: 20),
-+
-+                  // Comment field
-+                  const Text(
-+                    'Comment',
-+                    style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500),
-+                  ),
-+                  const SizedBox(height: 8),
-+                  TextField(
-+                    controller: _commentController,
-+                    maxLines: 4,
-+                    decoration: InputDecoration(
-+                      hintText: 'Share your thoughts about the tour...',
-+                      border: OutlineInputBorder(
-+                        borderRadius: BorderRadius.circular(12),
-+                      ),
-+                      contentPadding: const EdgeInsets.all(16),
-                     ),
--                    onPressed: () {
-+                  ),
-+
-+                  const SizedBox(height: 25),
-+
-+                  // Submit button
-+                  SizedBox(
-+                    width: double.infinity,
-+                    child: ElevatedButton(
-+                      onPressed: selectedRating > 0
-+                          ? () {
-+                              final authState = context.read<AuthBloc>().state;
-+                              if (authState is Authenticated) {
-+                                context.read<FeedbackBloc>().add(
-+                                  FeedbackSubmitted(
-+                                    Feedback(
-+                                      userId: authState.user.id,
-+                                      group: FeedbackGroup
-+                                          .customer, // Default to guest for now
-+                                      rating: selectedRating,
-+                                      comment: _commentController.text,
-+                                    ),
-+                                  ),
-+                                );
-+                              } else {
-+                                // If not logged in, just add to the sample list
-+                                setState(() {
-+                                  _sampleFeedback.insert(0, {
-+                                    'name': 'Guest User',
-+                                    'date': DateFormat(
-+                                      'MMMM d, y',
-+                                    ).format(DateTime.now()),
-+                                    'comment': _commentController.text,
-+                                    'rating': selectedRating,
-+                                    'avatar': 'ðŸ‘¤',
-+                                  });
-+                                  _commentController.clear();
-+                                  selectedRating = 0;
-+                                });
-+
-+                                ScaffoldMessenger.of(context).showSnackBar(
-+                                  const SnackBar(
-+                                    content: Text(
-+                                      'Feedback submitted as guest',
-+                                    ),
-+                                    duration: Duration(seconds: 2),
-+                                  ),
-+                                );
-+                              }
-+                            }
-+                          : null,
-+                      style: ElevatedButton.styleFrom(
-+                        backgroundColor: Colors.green,
-+                        padding: const EdgeInsets.symmetric(vertical: 16),
-+                        shape: RoundedRectangleBorder(
-+                          borderRadius: BorderRadius.circular(12),
-+                        ),
-+                      ),
-+                      child: const Text(
-+                        'Submit Feedback',
-+                        style: TextStyle(
-+                          color: Colors.white,
-+                          fontSize: 16,
-+                          fontWeight: FontWeight.bold,
-+                        ),
-+                      ),
-+                    ),
-+                  ),
-+
-+                  const SizedBox(height: 30),
-+
-+                  // Accordion sections
-+                  _buildAccordion(
-+                    title: 'Did We Explain the Programs Well?',
-+                    isExpanded: _isExpanded1,
-+                    onTap: () {
-                       setState(() {
--                        selectedRating = index + 1;
-+                        _isExpanded1 = !_isExpanded1;
-                       });
-                     },
--                  );
--                }),
--              ),
--              const SizedBox(height: 16),
--              const Text('Tell us more'),
--              const SizedBox(height: 16),
--              TextField(
--                controller: _commentController,
--                maxLines: 5,
--                decoration: const InputDecoration(
--                  hintText:
--                      'Was there a specific service or interaction youâ€™d like to highlight?\nAre there areas where we can do better?\nSuggestions, complaints, or words of encouragement are all welcome!',
--                ),
-+                    child: const Text(
-+                      'We strive to provide clear and comprehensive information about all our programs. Your feedback helps us improve our explanations and materials.',
-+                      style: TextStyle(fontSize: 15, color: Colors.grey),
-+                    ),
-+                  ),
-+
-+                  const SizedBox(height: 15),
-+
-+                  _buildAccordion(
-+                    title: 'Inspired to Join the Maritime World?',
-+                    isExpanded: _isExpanded2,
-+                    onTap: () {
-+                      setState(() {
-+                        _isExpanded2 = !_isExpanded2;
-+                      });
-+                    },
-+                    child: const Text(
-+                      'If you are interested in pursuing a career in the maritime industry, we would love to help you take the next steps. Contact us for more information about our programs and admission process.',
-+                      style: TextStyle(fontSize: 15, color: Colors.grey),
-+                    ),
-+                  ),
-+                ],
-               ),
--              const SizedBox(height: 16),
--              ElevatedButton(
--                onPressed: () {
--                  if (selectedGroup == null || selectedRating == 0) {
--                    ScaffoldMessenger.of(context).showSnackBar(
--                      const SnackBar(
--                        content: Text(
--                          'Please select a group and provide a rating',
-+            ),
-+          );
-+        },
-+      ),
-+    );
-+  }
-+
-+  Widget _buildFeedbackCard(Map<String, dynamic> feedback) {
-+    return Card(
-+      margin: const EdgeInsets.only(bottom: 16),
-+      elevation: 2,
-+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
-+      child: Padding(
-+        padding: const EdgeInsets.all(16),
-+        child: Column(
-+          crossAxisAlignment: CrossAxisAlignment.start,
-+          children: [
-+            Row(
-+              children: [
-+                CircleAvatar(child: Text(feedback['avatar'] ?? 'ðŸ‘¤')),
-+                const SizedBox(width: 12),
-+                Expanded(
-+                  child: Column(
-+                    crossAxisAlignment: CrossAxisAlignment.start,
-+                    children: [
-+                      Text(
-+                        feedback['name'] ?? 'Anonymous',
-+                        style: const TextStyle(
-+                          fontWeight: FontWeight.bold,
-+                          fontSize: 16,
-                         ),
-                       ),
--                    );
--                    return;
--                  }
--                  final authState = context.read<AuthBloc>().state;
--                  if (authState is Authenticated) {
--                    context.read<FeedbackBloc>().add(
--                      FeedbackSubmitted(
--                        Feedback(
--                          userId: authState.user.id,
--                          group: selectedGroup!,
--                          rating: selectedRating,
--                          comment: _commentController.text,
-+                      Text(
-+                        feedback['date'] ?? '',
-+                        style: const TextStyle(
-+                          color: Colors.grey,
-+                          fontSize: 14,
-                         ),
-                       ),
--                    );
--                  } else {
--                    ScaffoldMessenger.of(context).showSnackBar(
--                      const SnackBar(
--                        content: Text('Please login to submit feedback'),
--                      ),
--                    );
--                  }
--                },
--                style: ElevatedButton.styleFrom(
--                  backgroundColor: AppConstants.eslGreen,
-+                    ],
-+                  ),
-                 ),
--                child: const Text(
--                  'Submit Feedback',
--                  style: TextStyle(color: AppConstants.eslWhite),
-+              ],
-+            ),
-+            const SizedBox(height: 12),
-+            Text(
-+              feedback['comment'] ?? '',
-+              style: const TextStyle(fontSize: 15),
-+            ),
-+            const SizedBox(height: 12),
-+            ElevatedButton(
-+              onPressed: null,
-+              style: ElevatedButton.styleFrom(
-+                backgroundColor: Colors.amber[100],
-+                foregroundColor: Colors.amber[800],
-+                elevation: 0,
-+                padding: const EdgeInsets.symmetric(
-+                  horizontal: 12,
-+                  vertical: 6,
-+                ),
-+                shape: RoundedRectangleBorder(
-+                  borderRadius: BorderRadius.circular(20),
-                 ),
-               ),
--            ],
--          );
-+              child: Text('${feedback['rating']} Stars'),
-+            ),
-+          ],
-+        ),
-+      ),
-+    );
-+  }
-+
-+  Widget _buildAccordion({
-+    required String title,
-+    required bool isExpanded,
-+    required VoidCallback onTap,
-+    required Widget child,
-+  }) {
-+    return Card(
-+      elevation: 2,
-+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
-+      child: ExpansionTile(
-+        title: Text(
-+          title,
-+          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
-+        ),
-+        trailing: Icon(
-+          isExpanded ? Icons.expand_less : Icons.expand_more,
-+          color: Colors.grey,
-+        ),
-+        onExpansionChanged: (bool expanded) {
-+          onTap();
-         },
-+        children: [
-+          Padding(
-+            padding: const EdgeInsets.fromLTRB(16, 0, 16, 16),
-+            child: child,
-+          ),
-+        ],
-       ),
-     );
-   }
--- 
-2.47.1.windows.2
-
diff --git a/lib/features/program/presentation/pages/program_detail_page.dart b/lib/features/program/presentation/pages/program_detail_page.dart
index 6539311..c5c5035 100644
--- a/lib/features/program/presentation/pages/program_detail_page.dart
+++ b/lib/features/program/presentation/pages/program_detail_page.dart
@@ -60,7 +60,25 @@ class _ProgramDetailPageState extends State<ProgramDetailPage> {
 
             return Scaffold(
               appBar: AppBar(
-                title: const Text('Program Details'),
+                title: Row(
+                  children: [
+                    Text(
+                      '${selectedProgram?.programCode ?? 'Program Code'}-',
+                      style: TextStyle(
+                        fontSize: 17,
+                        fontWeight: FontWeight.normal,
+                      ),
+                    ),
+                    Text(
+                      selectedProgram?.name ?? 'Program Name',
+                      style: TextStyle(
+                        fontSize: 17,
+                        fontWeight: FontWeight.bold,
+                      ),
+                    ),
+                  ],
+                ),
+
                 actions: [
                   if (!hasApplied)
                     TextButton(
@@ -75,7 +93,7 @@ class _ProgramDetailPageState extends State<ProgramDetailPage> {
                 ],
               ),
               body: Padding(
-                padding: const EdgeInsets.all(8.0),
+                padding: const EdgeInsets.all(12.0),
                 child: ListView(
                   shrinkWrap: true,
                   children: [
diff --git a/lib/features/program/presentation/widgets/director_card.dart b/lib/features/program/presentation/widgets/director_card.dart
index 3338262..0fe2535 100644
--- a/lib/features/program/presentation/widgets/director_card.dart
+++ b/lib/features/program/presentation/widgets/director_card.dart
@@ -24,7 +24,7 @@ class DirectorCard extends StatelessWidget {
         children: [
           Container(
             width: 90,
-            height: 130,
+            height: 120,
             // padding: const EdgeInsets.all(8),
             decoration: BoxDecoration(
               color: const Color.fromARGB(255, 205, 201, 201),
@@ -35,14 +35,14 @@ class DirectorCard extends StatelessWidget {
               color: AppConstants.eslGrey,
             ),
           ),
-          const SizedBox(width: 16),
+          const SizedBox(width: 10),
 
           Expanded(
             child: Column(
               crossAxisAlignment: CrossAxisAlignment.start,
               children: [
                 Padding(
-                  padding: const EdgeInsets.all(8.0),
+                  padding: const EdgeInsets.only(top: 10.0),
                   child: Text(
                     'Capt. $name',
                     style: boldTextStyle.copyWith(
diff --git a/lib/features/program/presentation/widgets/program_detail_card.dart b/lib/features/program/presentation/widgets/program_detail_card.dart
index f9ab119..9c7ce20 100644
--- a/lib/features/program/presentation/widgets/program_detail_card.dart
+++ b/lib/features/program/presentation/widgets/program_detail_card.dart
@@ -22,49 +22,45 @@ class ProgramDetailCard extends StatelessWidget {
   final int? passPoint;
   @override
   Widget build(BuildContext context) {
-    return Container(
-      padding: const EdgeInsets.all(12),
-
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
-        children: [
-          Container(
-            color: AppConstants.eslGreyText,
-            height: 250,
-            child: Center(
-              child: Image.asset(
-                color: AppConstants.eslGrey,
-                height: 100,
-                AppConstants.engHorizontalGrey$GreyLOGO,
-              ),
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Container(
+          color: AppConstants.eslGreyText,
+          height: 250,
+          child: Center(
+            child: Image.asset(
+              color: AppConstants.eslGrey,
+              height: 100,
+              AppConstants.engHorizontalGrey$GreyLOGO,
             ),
           ),
-          SizedBox(height: 20),
-          Row(
-            mainAxisAlignment: MainAxisAlignment.spaceBetween,
-            children: [
+        ),
+        SizedBox(height: 20),
+        Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          children: [
+            _buildInfoBox(
+              icon: FluentIcons.hat_graduation_12_filled,
+              label: '${passPoint.toString()}%',
+              suffix: '-Pass Point',
+            ),
+            if (passPoint != null)
               _buildInfoBox(
-                icon: FluentIcons.hat_graduation_12_filled,
-                label: '${passPoint.toString()}%',
-                suffix: '-Pass Point',
+                icon: FluentIcons.wallet_16_filled,
+                label: price,
+                suffix: 'USD',
               ),
-              if (passPoint != null)
-                _buildInfoBox(
-                  icon: FluentIcons.wallet_16_filled,
-                  label: price,
-                  suffix: 'USD',
-                ),
-            ],
-          ),
-          if (description != null) ...[
-            const SizedBox(height: 10),
-            SizedBox(
-              height: 700,
-              child: LexicalDescriptionView(description: description),
-            ),
           ],
+        ),
+        if (description != null) ...[
+          const SizedBox(height: 10),
+          SizedBox(
+            height: 700,
+            child: LexicalDescriptionView(description: description),
+          ),
         ],
-      ),
+      ],
     );
   }
 
diff --git a/lib/features/program/presentation/widgets/program_detail_overlay.dart b/lib/features/program/presentation/widgets/program_detail_overlay.dart
index 8d03ec6..b4f73a2 100644
--- a/lib/features/program/presentation/widgets/program_detail_overlay.dart
+++ b/lib/features/program/presentation/widgets/program_detail_overlay.dart
@@ -85,7 +85,6 @@ class ProgramDetailSheet extends StatelessWidget {
   }
 
   static void show({required BuildContext context, required Program program}) {
-    // Format the description to match Lexical JSON structure if it's a string
     Map<String, dynamic>? formattedDescription;
     if (program.description != null) {
       if (program.description is String) {
diff --git a/lib/features/program/presentation/widgets/req_card.dart b/lib/features/program/presentation/widgets/req_card.dart
index a6eaf3d..cb228b4 100644
--- a/lib/features/program/presentation/widgets/req_card.dart
+++ b/lib/features/program/presentation/widgets/req_card.dart
@@ -18,6 +18,7 @@ class ReqCard extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return Card(
+      borderOnForeground: false,
       elevation: 0.2,
       margin: const EdgeInsets.symmetric(vertical: 8, horizontal: 16),
       child: Column(
-- 
2.47.1.windows.2

